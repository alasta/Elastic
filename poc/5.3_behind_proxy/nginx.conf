#Backup ES node to kibana available when first node is down
upstream clusterelasticsearch {
  server 127.0.0.1:9200;
  server 127.0.0.1:9201 backup;
  server 127.0.0.1:9202 backup;
  keepalive 15;
}

server {
  listen       80;
  #adapt your @IP 
  server_name  192.168.1.1 127.0.0.1; 
  #error_page  404              /404.html;
  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
      root   /usr/share/nginx/html;
  }

  location /kibana/ {
    proxy_set_header    Host $host;
    proxy_set_header    X-Real-IP $remote_addr;
    #proxy_set_header    X-Forwarded-Proto https;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
#   rewrite_log on;
    rewrite  ^/kibana/(.*)  /$1 break;
    proxy_pass http://127.0.0.1:5601;
  }

  # optional block to handle landing url without trailing slash: `/kibana`
  location = /kibana {
    return 302 /kibana/;
  }
    
  #Optional
  location ~ (^/cerebro/) {
    proxy_set_header    Host $host;
    proxy_set_header    X-Real-IP $remote_addr;
    #proxy_set_header    X-Forwarded-Proto https;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    # The rewrite is disabled, to actually have the login screen displayed.
    #rewrite  ^/cerebro/(.*)  /$1 break;
    proxy_pass  http://127.0.0.1:9000;
  }

  location /clusteres/ {
    rewrite_log on;
    rewrite  ^/clusteres/(.*)  /$1 break;
    proxy_set_header    Host $host;
    proxy_set_header    X-Real-IP $remote_addr;
    #proxy_set_header    X-Forwarded-Proto https;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://clusterelasticsearch;
  }
  location = /clusteres {
    return 302 /clusteres/;
  }
}
